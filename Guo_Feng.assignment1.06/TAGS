
character.h,158
# define CHARACTER_H2,20
typedef struct dungeon dungeon_t;8,84
typedef struct dice_t dice_t;11,169
}character_t;character_t16,219
class character43,986

dims.h,146
# define DIMS_H2,15
typedef enum dim 7,190
  dim_x,8,209
  dim_y,9,218
  num_dims10,227
} dim_t;11,238
typedef int8_t pair_t[pair_t13,248

dungeon.c,887
typedef struct corridor_path 13,271
} corridor_path_t;20,503
static int32_t corridor_path_cmp(22,523
static void dijkstra_corridor(28,786
static int connect_two_rooms(134,5189
static int connect_rooms(152,5840
static int empty_dungeon(163,6013
static int place_rooms(183,6439
static int make_rooms(220,7626
int gen_dungeon(246,8280
void render_dungeon(274,8655
static char distance_to_char[distance_to_char335,10112
void render_distance_map(400,10584
void render_tunnel_distance_map(436,11501
void delete_dungeon(476,12570
void init_dungeon(483,12707
static int write_dungeon_map(497,13023
static int write_rooms(510,13267
static uint32_t calculate_dungeon_size(525,13636
int write_dungeon(532,13877
static int read_dungeon_map(586,15174
static int read_rooms(612,15889
static int calculate_num_rooms(638,16609
int read_dungeon(646,16868
int read_pgm(725,18608

dungeon.h,963
# define DUNGEON_H2,18
#define DUNGEON_X 12,164
#define DUNGEON_Y 13,198
#define MIN_ROOMS 14,232
#define MAX_ROOMS 15,265
#define ROOM_MIN_X 16,298
#define ROOM_MIN_Y 17,331
#define ROOM_MAX_X 18,364
#define ROOM_MAX_Y 19,398
#define VISUAL_RANGE 20,431
#define PC_SPEED 21,465
#define SAVE_DIR 22,499
#define DUNGEON_SAVE_FILE 23,540
#define DUNGEON_SAVE_SEMANTIC 24,581
#define DUNGEON_SAVE_VERSION 25,621
#define mappair(27,656
#define darkpair(28,713
#define mapxy(29,772
#define hardnesspair(30,807
#define hardnessxy(31,874
#define charpair(32,919
#define charxy(33,983
typedef enum __attribute__ ((__packed__)) terrain_type 35,1026
  ter_debug,36,1083
  ter_wall,37,1096
  ter_wall_immutable,38,1108
  ter_floor,39,1130
  ter_floor_room,40,1143
  ter_floor_hall,41,1161
  up,42,1179
  down,43,1185
} terrain_type_t;44,1193
typedef struct room 46,1212
} room_t;50,1290
typedef struct dungeon 54,1334
} dungeon_t;76,2401

heap.c,798
#undef min4,39
struct heap_node 6,51
#define splice_heap_node_lists(16,212
#define insert_heap_node_in_list(25,524
#define remove_heap_node_from_list(32,748
void print_heap_node(37,881
void print_heap(53,1203
void print_heap_node_list(70,1505
void heap_init(86,1704
void heap_node_delete(96,1940
void heap_delete(114,2244
heap_node_t *heap_insert(heap_insert125,2409
void *heap_peek_min(heap_peek_min145,2725
static void heap_link(150,2801
static void heap_consolidate(164,3123
void *heap_remove_min(heap_remove_min205,4056
int heap_combine(240,4590
static void heap_cut(269,5241
static void heap_cascading_cut(283,5522
int heap_decrease_key(297,5748
int heap_decrease_key_no_replace(311,5990
int32_t compare(335,6564
char *print_int(print_int340,6663
int main(349,6781

heap.h,111
# define HEAP_H2,15
typedef struct heap_node heap_node_t;11,114
typedef struct heap 13,153
} heap_t;18,301

macros.h,611
# define MACROS_H2,17
#  define dprintf(16,213
#  define dfprintf(17,256
#  define dprintf(19,320
#  define dfprintf(20,343
# define fieldwidth(23,382
# define exit(37,1201
# define fopen(42,1441
#  define malloc(76,3348
#  define calloc(92,4430
#  define strdup(107,5435
#  define free(117,6055
# define swap(125,6303
# define memswap(131,6415
# define structdup(137,6543
# define datacmp(144,6927
# define max2(153,7400
# define min2(160,7576
# define max 167,7752
# define min 168,7770
# define max3(170,7789
# define min3(171,7830
# define frand(173,7872
# define structdup(180,7984

move.c,190
void do_combat(16,231
void move_character(24,373
void do_moves(45,894
void dir_nearest_wall(427,10130
uint32_t in_corner(439,10521
void interface(457,11125
uint32_t move_pc(461,11147

move.h,61
# define MOVE_H2,15
typedef struct dungeon dungeon_t;10,99

npc.h,1079
# define NPC_H2,14
typedef struct dungeon dungeon_t;11,97
typedef uint32_t npc_characteristics_t;13,163
typedef  character_t npc_t;15,204
# define NPC_SMART 17,233
# define NPC_TELEPATH 18,271
# define NPC_TUNNEL 19,309
# define NPC_ERRATIC 20,347
# define NPC_BIT04 21,385
# define NPC_BIT05 22,423
# define NPC_BIT06 23,461
# define NPC_BIT07 24,499
# define NPC_BIT08 25,537
# define NPC_BIT09 26,575
# define NPC_BIT10 27,613
# define NPC_BIT11 28,651
# define NPC_BIT12 29,689
# define NPC_BIT13 30,727
# define NPC_BIT14 31,765
# define NPC_BIT15 32,803
# define NPC_BIT16 33,841
# define NPC_BIT17 34,879
# define NPC_BIT18 35,917
# define NPC_BIT19 36,955
# define NPC_BIT20 37,993
# define NPC_BIT21 38,1031
# define NPC_BIT22 39,1069
# define NPC_BIT23 40,1107
# define NPC_BIT24 41,1145
# define NPC_BIT25 42,1183
# define NPC_BIT26 43,1221
# define NPC_BIT27 44,1259
# define NPC_BIT28 45,1297
# define NPC_BIT29 46,1335
# define NPC_BIT30 47,1373
# define NPC_BIT31 48,1411
# define has_characteristic(50,1450
class npc 56,1600

path.c,208
static dungeon_t *dungeon;dungeon12,633
typedef struct path 14,661
} path_t;17,720
static int32_t dist_cmp(19,731
static int32_t tunnel_cmp(26,1085
void dijkstra(33,1433
void dijkstra_tunnel(141,5814

path.h,60
# define PATH_H2,15
typedef struct dungeon dungeon_t;4,32

pc.h,109
# define PC_H2,13
typedef struct dungeon dungeon_t;11,73
typedef character_t pc_t;13,108
class pc 18,177

rlg327.c,115
const char *victory victory17,253
const char *tombstone tombstone48,1824
void usage(71,2877
int main(81,3070

utils.c,25
int makedirectory(9,124

utils.h,77
# define UTILS_H2,16
# define rand_under(6,147
# define rand_range(10,290
